"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5760],{74880:(t,r,n)=>{var o;n.d(r,{v4:()=>d});var e=new Uint8Array(16);function u(){if(!o&&!(o="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return o(e)}const a=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const s=function(t){return"string"==typeof t&&a.test(t)};for(var i=[],f=0;f<256;++f)i.push((f+256).toString(16).substr(1));const p=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(i[t[r+0]]+i[t[r+1]]+i[t[r+2]]+i[t[r+3]]+"-"+i[t[r+4]]+i[t[r+5]]+"-"+i[t[r+6]]+i[t[r+7]]+"-"+i[t[r+8]]+i[t[r+9]]+"-"+i[t[r+10]]+i[t[r+11]]+i[t[r+12]]+i[t[r+13]]+i[t[r+14]]+i[t[r+15]]).toLowerCase();if(!s(n))throw TypeError("Stringified UUID is invalid");return n};const d=function(t,r,n){var o=(t=t||{}).random||(t.rng||u)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,r){n=n||0;for(var e=0;e<16;++e)r[n+e]=o[e];return r}return p(o)}}}]);