namespace App;

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

/// Mapping 1-N
[Table(DbConst.table_user_wallet)]
[Index(nameof(user_id))]
[Index(nameof(wallet_address), IsUnique = true)]
public class UserWalletModel : AutoGenerateUpdateTime {
	/// Id of user_wallet
	[Key]
	[Column("id")]
	public long id { get; set; }

	/// Point to field `user.id`.
	[Required]
	[ForeignKey(DbConst.table_user)]
	[Column("user_id")]
	public Guid user_id { get; set; }

	/// Just for display. For eg,. Flint, Nami, Yoroi,...
	[Column("wallet_name", TypeName = "varchar(32)"), MaxLength(32)]
	public string? wallet_name { get; set; }

	/// Generated by Cardano. It is unique at Cardano.
	[Required]
	[Column("wallet_address", TypeName = "varchar(255)"), MaxLength(255)]
	public string wallet_address { get; set; }

	/// [See const] Wallet type (internal, external, external hardware,...).
	[Required]
	[Column("wallet_type", TypeName = "tinyint")]
	public UserWalletModelConst.WalletType wallet_type { get; set; }

	/// [See const] Wallet status (pending, active, inactive,...).
	[Required]
	[Column("wallet_status", TypeName = "tinyint")]
	public UserWalletModelConst.WalletStatus wallet_status { get; set; }

	[Required]
	[Column("created_at")]
	public DateTime created_at { get; set; }

	[Column("updated_at")]
	public DateTime? updated_at { get; set; }

	/// When user disconnected the wallet, we mark it as deleted instead of hard delete.
	[Column("deleted_at")]
	public DateTime? deleted_at { get; set; }

	/// FK models (property name must be same with table name)
	public UserModel user { get; set; }
}
